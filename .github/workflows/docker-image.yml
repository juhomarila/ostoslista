name: Docker Image CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Login to Docker Hub
      env:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
      run: |
        docker login -u $username -p $password 

    # Step 1: Build and push the standard image from Dockerfile
    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/ostoslista-app:latest -f Dockerfile .
        
    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/ostoslista-app:latest

    # Step 2: Use buildx to convert the image to arm64 and push as a multi-platform image
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true

    - name: Build and Push Multi-Platform Image
      run: |
        docker buildx build --platform linux/arm64,linux/amd64 \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/ostoslista-app:latest \
          --push .
          
  ssh_to_server:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Install SSH Key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: SSH to Server
      run: ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
          'docker compose down && docker compose up -d'
