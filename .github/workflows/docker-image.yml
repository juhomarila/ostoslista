name: Docker Image CI

on:
  push:
    branches: [ "main" ]

jobs:
  # build:
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v2

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v2
  #     with:
  #       install: true
        
  #   - name: login to docker hub
  #     id: docker-hub
  #     env:
  #       username: ${{secrets.DOCKERHUB_USERNAME}}
  #       password: ${{secrets.DOCKERHUB_PASSWORD}}
  #     run: |
  #       docker login -u $username -p $password 
  #   - name: Build and Push Docker Image
  #     env:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #     run: |
  #       docker buildx build --platform linux/arm64 \
  #         -t $username/ostoslista-app:latest \
  #         --push .
  ssh_to_server:
    runs-on: ubuntu-latest
    #needs: build
    steps:
    - name: Install OpenVPN
      run: sudo apt-get update && sudo apt-get install openvpn -y
    - name: Connect VPN
      env:
        VPN_USERNAME: ${{ secrets.VPN_USERNAME }}
        VPN_PASSWORD: ${{ secrets.VPN_PASSWORD }}
      run: |
        echo "${{ secrets.VPN_CONFIG }}" > vpn-config.ovpn
        sudo openvpn --config vpn-config.ovpn --auth-user-pass <(echo -e "$VPN_USERNAME\n$VPN_PASSWORD") &
        sleep 10
          
    - name: Install ssh key
      #uses: webfactory/ssh-agent@v0.5.3
      #with:
        #ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}      
    #- name: SSH to server
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa      
        ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'docker compose down && docker compose pull && docker compose up -d && docker system prune -f'
