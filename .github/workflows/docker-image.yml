name: Docker Image CI

on:
  push:
    branches: [ "main" ]

jobs:
  # build:
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v2

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v2
  #     with:
  #       install: true
        
  #   - name: login to docker hub
  #     id: docker-hub
  #     env:
  #       username: ${{secrets.DOCKERHUB_USERNAME}}
  #       password: ${{secrets.DOCKERHUB_PASSWORD}}
  #     run: |
  #       docker login -u $username -p $password 
  #   - name: Build and Push Docker Image
  #     env:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #     run: |
  #       docker buildx build --platform linux/arm64 \
  #         -t $username/ostoslista-app:latest \
  #         --push .

  vpn_and_ssh_to_server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install OpenVPN
        run: sudo apt-get update && sudo apt-get install -y openvpn

      - name: Setup VPN Connection
        env:
          VPN_USERNAME: ${{ secrets.VPN_USERNAME }}
          VPN_PASSWORD: ${{ secrets.VPN_PASSWORD }}
        run: |
          # Save the VPN config file from a secret
          echo "${{ secrets.VPN_CONFIG }}" > vpn-config.ovpn
          
          # Write username and password to a temp file
          echo -e "$VPN_USERNAME\n$VPN_PASSWORD" > vpn-auth.txt
          chmod 600 vpn-auth.txt
          chmod 600 vpn-config.ovpn

          cat vpn-auth.txt
          
          # Establish the VPN connection
          sudo openvpn --config vpn-config.ovpn --auth-user-pass vpn-auth.txt &
          
          # Give it time to establish
          sleep 25

      - name: SSH into Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'Connected via VPN!'"
      - name: Clean Up
        run: |
          rm vpn-config.ovpn vpn-auth.txt ~/.ssh/id_rsa
